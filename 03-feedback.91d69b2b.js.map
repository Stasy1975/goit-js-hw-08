{"mappings":"oeAKA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,kBACjCC,EAAUH,EAAQE,cAAc,uBAChCE,EAAQJ,EAAQE,cAAc,4BAC9BG,EAAQL,EAAQE,cAAc,yBAEpC,IAAII,EAA2BC,aAAaC,QAAQ,uBACpDF,EAA2BA,EACvBG,KAAKC,MAAMH,aAAaC,QAAQ,wBAChC,GAEAF,EAAyBK,QAC3BR,EAAQS,MAAQN,EAAyBK,OAGvCL,EAAyBO,UAC3BT,EAAMQ,MAAQN,EAAyBO,SAmBzCR,EAAMS,iBAAiB,SAhBNC,IACfA,EAAEC,iBACFC,QAAQC,IAAIZ,GAEZN,EAAQmB,QACRb,EAA2B,MAY7BN,EAAQc,iBAAiB,SAAS,EAAAhB,EAAAsB,WATjBL,IACfT,EAAyBS,EAAEM,OAAOC,MAAQP,EAAEM,OAAOT,MAEnDL,aAAagB,QACX,sBACAd,KAAKe,UAAUlB,MAIkC","sources":["src/js/03-feedback.js"],"sourcesContent":["// Отслеживай на форме событие input, и каждый раз записывай в локальное хранилище объект с полями email и message, в которых сохраняй текущие значения полей формы. Пусть ключом для хранилища будет строка \"feedback-form-state\".\n// При загрузке страницы проверяй состояние хранилища, и если там есть сохраненные данные, заполняй ими поля формы. В противном случае поля должны быть пустыми.\n// При сабмите формы очищай хранилище и поля формы, а также выводи объект с полями email, message и текущими их значениями в консоль.\n// Сделай так, чтобы хранилище обновлялось не чаще чем раз в 500 миллисекунд. Для этого добавь в проект и используй библиотеку lodash.throttle.\n\nimport { throttle } from 'lodash';\n\nconst formRef = document.querySelector('.feedback-form');\nconst emailEl = formRef.querySelector('input[name=\"email\"]');\nconst msgEl = formRef.querySelector('textarea[name=\"message\"]');\nconst btnEl = formRef.querySelector('button[type=\"submit\"]');\n\nlet currentFeedbackFormState = localStorage.getItem('feedback-form-state');\ncurrentFeedbackFormState = currentFeedbackFormState\n  ? JSON.parse(localStorage.getItem('feedback-form-state'))\n  : {};\n\nif (currentFeedbackFormState.email) {\n  emailEl.value = currentFeedbackFormState.email;\n}\n\nif (currentFeedbackFormState.message) {\n  msgEl.value = currentFeedbackFormState.message;\n}\n\nconst onSubmit = e => {\n  e.preventDefault();\n  console.log(currentFeedbackFormState);\n  // localStorage.removeItem('feedback-form-state');\n  formRef.reset();\n  currentFeedbackFormState = {};\n};\n\nconst fillForm = e => {\n  currentFeedbackFormState[e.target.name] = e.target.value;\n\n  localStorage.setItem(\n    'feedback-form-state',\n    JSON.stringify(currentFeedbackFormState)\n  );\n};\nbtnEl.addEventListener('click', onSubmit);\nformRef.addEventListener('input', throttle(fillForm, 500));\n"],"names":["$kEUo3","parcelRequire","$945622fd0f572e60$var$formRef","document","querySelector","$945622fd0f572e60$var$emailEl","$945622fd0f572e60$var$msgEl","$945622fd0f572e60$var$btnEl","$945622fd0f572e60$var$currentFeedbackFormState","localStorage","getItem","JSON","parse","email","value","message","addEventListener","e","preventDefault","console","log","reset","throttle","target","name","setItem","stringify"],"version":3,"file":"03-feedback.91d69b2b.js.map"}